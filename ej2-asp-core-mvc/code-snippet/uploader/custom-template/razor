<div id="container">
    <div id='dropArea'>
        <span id='drop' class="droparea"> Drop files here or <a href="" id='browse'><u>Browse</u></a> </span>
        @Html.EJS().Uploader("UploadFiles").Success("onuploadSuccess").DropArea("#dropArea").Failure("onuploadFailed").Selected("onSelect").Progress("onFileUpload").Template("<span class='wrapper'><span class='icon sf-icon-${type}'></span><span class='name file-name'>${name}</span></span>" +
        "<span class='file-size-td file-size'>${size} bytes</span> <span class='e-icons e-file-remove-btn' title='Remove'></span> <br/> " +
        "<progress id='progressBar' class='progressbar' value='0' max='100'></progress> <span class='percent-td percent'></span>").AsyncSettings(new Syncfusion.EJ2.Inputs.UploaderAsyncSettings { SaveUrl = "https://services.syncfusion.com/aspnet/production/api/FileUploader/Save", RemoveUrl = "https://services.syncfusion.com/aspnet/production/api/FileUploader/Remove" }).AutoUpload(false).Render()
    </div>
</div>

<script>

    document.getElementById('browse').onclick = function () {
        document.getElementsByClassName('e-file-select-wrap')[0].querySelector('button').click();
        return false;
    };
    function onFileUpload(args) {
        let li = this.uploadWrapper.querySelector('[data-file-name="' + args.file.name + '"]');
        let progressValue = Math.round((args.e.loaded / args.e.total) * 100);
        li.getElementsByTagName('progress')[0].value = progressValue;
        li.getElementsByClassName('percent')[0].textContent = progressValue.toString() + " %";
    }
    function onuploadSuccess(args) {
        if (args.operation === 'remove') {
            let height = document.getElementById('dropArea').style.height;
            height = (parseInt(height) - 40) + 'px';
            document.getElementById('dropArea').style.height = height;
        } else {
            let li = this.uploadWrapper.querySelector('[data-file-name="' + args.file.name + '"]');
            let progressBar = li.getElementsByTagName('progress')[0];
            progressBar.classList.add('e-upload-success');
            li.getElementsByClassName('percent')[0].classList.add('e-upload-success');
            let height = document.getElementById('dropArea').style.height;
            document.getElementById('dropArea').style.height = parseInt(height) - 15 + 'px';
        }
    }
    function onuploadFailed(args) {
        let li = this.uploadWrapper.querySelector('[data-file-name="' + args.file.name + '"]');
        let progressBar = li.getElementsByTagName('progress')[0];
        progressBar.classList.add('e-upload-failed');
        li.getElementsByClassName('percent')[0].classList.add('e-upload-failed');
    }
    function onSelect(args) {
        let length = args.filesData.length;
        let height = document.getElementById('dropArea').style.height;
        height = parseInt(height) + (length * 55) + 'px';
        document.getElementById('dropArea').style.height = height;
    }
</script>